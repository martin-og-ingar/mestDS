model:
  simulation_name: "lagged_sickness_09"
  time_granularity: "W"
  simulation_length: 100
  features:
    - name: "population"
      function: |
        def get_population():
          return 10000
    - name: "mean_temperature"
      function: |
        def get_temperature(i):
          i = (i - 1) % 52 + 1
          seasonal_temp = 24 + 5 * np.sin(2 * np.pi * i / 52)
          random_noise = np.random.normal(0, 2)
          return seasonal_temp + random_noise
    - name: "rainfall"
      function: |
        def get_rainfall(region, i):
          i = (i - 1) % 52 + 1
          rain_season = False
          for season in region.rain_season:
            if season.start <= i <= season.end:
              rain_season = True
          if rain_season:
              return np.random.gamma(shape=6, scale=1.0) * 4
          else:
              return np.random.gamma(shape=2, scale=0.5) * 2
    - name: "lagged_sickness"
      function: |
        def get_lagged_sickness(disease_cases):
          return disease_cases[-1]
    - name: "disease_cases"
      function: |
        def get_disease_cases(mean_temperature, rainfall, lagged_sickness):
          sickness = (mean_temperature[-1] * 0.5) + (rainfall[-1] * 0.5) + (lagged_sickness[-1] * 0.9)
          return sickness + np.random.uniform(-2, 2)

  regions:
    - name: "Finnmark"
      region_id: 1
      rain_season: [[10, 23], [45, 52]]
      neighbour: [2]
evaluators:
  - evaluation_technique: "holdout"
    test_size_percentage: 0.12
    model: "https://github.com/knutdrand/weekly_ar_model@36a537dac138af428a4167b2a89eac7dafd5d762"
    # model: https://github.com/sandvelab/monthly_ar_model@cadd785872624b4bcd839a39f5e7020c25254c31
